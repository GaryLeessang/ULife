package com.example.joe.cityumobile.greenDaoGenerated;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.joe.cityumobile.DataModel.DaoModel.Apply;
import com.example.joe.cityumobile.DataModel.DaoModel.ChatObj;
import com.example.joe.cityumobile.DataModel.DaoModel.Conversation;
import com.example.joe.cityumobile.DataModel.DaoModel.Express;

import com.example.joe.cityumobile.greenDaoGenerated.ApplyDao;
import com.example.joe.cityumobile.greenDaoGenerated.ChatObjDao;
import com.example.joe.cityumobile.greenDaoGenerated.ConversationDao;
import com.example.joe.cityumobile.greenDaoGenerated.ExpressDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig applyDaoConfig;
    private final DaoConfig chatObjDaoConfig;
    private final DaoConfig conversationDaoConfig;
    private final DaoConfig expressDaoConfig;

    private final ApplyDao applyDao;
    private final ChatObjDao chatObjDao;
    private final ConversationDao conversationDao;
    private final ExpressDao expressDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        applyDaoConfig = daoConfigMap.get(ApplyDao.class).clone();
        applyDaoConfig.initIdentityScope(type);

        chatObjDaoConfig = daoConfigMap.get(ChatObjDao.class).clone();
        chatObjDaoConfig.initIdentityScope(type);

        conversationDaoConfig = daoConfigMap.get(ConversationDao.class).clone();
        conversationDaoConfig.initIdentityScope(type);

        expressDaoConfig = daoConfigMap.get(ExpressDao.class).clone();
        expressDaoConfig.initIdentityScope(type);

        applyDao = new ApplyDao(applyDaoConfig, this);
        chatObjDao = new ChatObjDao(chatObjDaoConfig, this);
        conversationDao = new ConversationDao(conversationDaoConfig, this);
        expressDao = new ExpressDao(expressDaoConfig, this);

        registerDao(Apply.class, applyDao);
        registerDao(ChatObj.class, chatObjDao);
        registerDao(Conversation.class, conversationDao);
        registerDao(Express.class, expressDao);
    }
    
    public void clear() {
        applyDaoConfig.clearIdentityScope();
        chatObjDaoConfig.clearIdentityScope();
        conversationDaoConfig.clearIdentityScope();
        expressDaoConfig.clearIdentityScope();
    }

    public ApplyDao getApplyDao() {
        return applyDao;
    }

    public ChatObjDao getChatObjDao() {
        return chatObjDao;
    }

    public ConversationDao getConversationDao() {
        return conversationDao;
    }

    public ExpressDao getExpressDao() {
        return expressDao;
    }

}
